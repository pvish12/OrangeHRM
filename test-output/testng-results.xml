<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="2" total="5" passed="2" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-03-17T17:56:38 IST" name="Suite" finished-at="2023-03-17T17:57:00 IST" duration-ms="21977">
    <groups>
    </groups>
    <test started-at="2023-03-17T17:56:38 IST" name="Test" finished-at="2023-03-17T17:57:00 IST" duration-ms="21977">
      <class name="Testpackage.BaseClass">
        <test-method is-config="true" signature="beforeTest(java.lang.String)[pri:0, instance:Testpackage.BaseClass@6c64cb25]" started-at="2023-03-17T17:56:38 IST" name="beforeTest" finished-at="2023-03-17T17:56:46 IST" duration-ms="8241" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method is-config="true" signature="aftertest()[pri:0, instance:Testpackage.BaseClass@6c64cb25]" started-at="2023-03-17T17:57:00 IST" name="aftertest" finished-at="2023-03-17T17:57:00 IST" duration-ms="273" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftertest -->
      </class> <!-- Testpackage.BaseClass -->
      <class name="Testpackage.LoginTestClass">
        <test-method is-config="true" signature="beforeclass()[pri:0, instance:Testpackage.LoginTestClass@36902638]" started-at="2023-03-17T17:56:46 IST" name="beforeclass" finished-at="2023-03-17T17:56:46 IST" duration-ms="37" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeclass -->
        <test-method is-config="true" signature="beforemethod()[pri:0, instance:Testpackage.LoginTestClass@36902638]" started-at="2023-03-17T17:56:46 IST" name="beforemethod" finished-at="2023-03-17T17:56:46 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method signature="Verifyloginpagefunctionalitywithcorrectdata()[pri:0, instance:Testpackage.LoginTestClass@36902638]" started-at="2023-03-17T17:56:46 IST" name="Verifyloginpagefunctionalitywithcorrectdata" finished-at="2023-03-17T17:56:48 IST" duration-ms="1384" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Verifyloginpagefunctionalitywithcorrectdata -->
        <test-method is-config="true" signature="aftermetod()[pri:0, instance:Testpackage.LoginTestClass@36902638]" started-at="2023-03-17T17:56:48 IST" name="aftermetod" finished-at="2023-03-17T17:56:48 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermetod -->
        <test-method is-config="true" signature="aftermethod(org.testng.ITestResult)[pri:0, instance:Testpackage.LoginTestClass@36902638]" started-at="2023-03-17T17:56:48 IST" name="aftermethod" finished-at="2023-03-17T17:56:48 IST" duration-ms="491" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Verifyloginpagefunctionalitywithcorrectdata status=SUCCESS method=LoginTestClass.Verifyloginpagefunctionalitywithcorrectdata()[pri:0, instance:Testpackage.LoginTestClass@36902638] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method is-config="true" signature="beforemethod()[pri:0, instance:Testpackage.LoginTestClass@36902638]" started-at="2023-03-17T17:56:48 IST" name="beforemethod" finished-at="2023-03-17T17:56:48 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method signature="Verifyloginpagefunctionalitywithincorrectdata()[pri:0, instance:Testpackage.LoginTestClass@36902638]" started-at="2023-03-17T17:56:48 IST" name="Verifyloginpagefunctionalitywithincorrectdata" finished-at="2023-03-17T17:56:59 IST" duration-ms="11036" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//input[@name='username']"}
  (Session info: chrome=111.0.5563.65)
For documentation on this error, please visit: https://selenium.dev/exceptions/#no_such_element
Build info: version: '4.8.1', revision: '8ebccac989'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '19.0.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [fcd10e1160cfccb4c449a1449ef8effb, findElement {using=xpath, value=//input[@name='username']}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 111.0.5563.65, chrome: {chromedriverVersion: 111.0.5563.64 (c710e93d5b63..., userDataDir: C:\Users\Netizens\AppData\L...}, goog:chromeOptions: {debuggerAddress: localhost:57405}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:57405/devtoo..., se:cdpVersion: 111.0.5563.65, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: fcd10e1160cfccb4c449a1449ef8effb]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//input[@name='username']"}
  (Session info: chrome=111.0.5563.65)
For documentation on this error, please visit: https://selenium.dev/exceptions/#no_such_element
Build info: version: '4.8.1', revision: '8ebccac989'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '19.0.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [fcd10e1160cfccb4c449a1449ef8effb, findElement {using=xpath, value=//input[@name='username']}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 111.0.5563.65, chrome: {chromedriverVersion: 111.0.5563.64 (c710e93d5b63..., userDataDir: C:\Users\Netizens\AppData\L...}, goog:chromeOptions: {debuggerAddress: localhost:57405}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:57405/devtoo..., se:cdpVersion: 111.0.5563.65, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: fcd10e1160cfccb4c449a1449ef8effb
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:484)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:184)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:167)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:142)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:162)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:60)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:352)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:344)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:70)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:39)
at jdk.proxy2/jdk.proxy2.$Proxy21.sendKeys(Unknown Source)
at Pompackage.LogInPage.sendUsername(LogInPage.java:25)
at Testpackage.LoginTestClass.Verifyloginpagefunctionalitywithincorrectdata(LoginTestClass.java:58)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Verifyloginpagefunctionalitywithincorrectdata -->
        <test-method is-config="true" signature="aftermetod()[pri:0, instance:Testpackage.LoginTestClass@36902638]" started-at="2023-03-17T17:56:59 IST" name="aftermetod" finished-at="2023-03-17T17:56:59 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermetod -->
        <test-method is-config="true" signature="aftermethod(org.testng.ITestResult)[pri:0, instance:Testpackage.LoginTestClass@36902638]" started-at="2023-03-17T17:56:59 IST" name="aftermethod" finished-at="2023-03-17T17:57:00 IST" duration-ms="328" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Verifyloginpagefunctionalitywithincorrectdata status=FAILURE method=LoginTestClass.Verifyloginpagefunctionalitywithincorrectdata()[pri:0, instance:Testpackage.LoginTestClass@36902638] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method is-config="true" signature="beforemethod()[pri:0, instance:Testpackage.LoginTestClass@36902638]" started-at="2023-03-17T17:57:00 IST" name="beforemethod" finished-at="2023-03-17T17:57:00 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method signature="best3()[pri:0, instance:Testpackage.LoginTestClass@36902638]" started-at="2023-03-17T17:57:00 IST" name="best3" finished-at="2023-03-17T17:57:00 IST" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- best3 -->
        <test-method is-config="true" signature="aftermetod()[pri:0, instance:Testpackage.LoginTestClass@36902638]" started-at="2023-03-17T17:57:00 IST" name="aftermetod" finished-at="2023-03-17T17:57:00 IST" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermetod -->
        <test-method is-config="true" signature="aftermethod(org.testng.ITestResult)[pri:0, instance:Testpackage.LoginTestClass@36902638]" started-at="2023-03-17T17:57:00 IST" name="aftermethod" finished-at="2023-03-17T17:57:00 IST" duration-ms="93" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=best3 status=SUCCESS method=LoginTestClass.best3()[pri:0, instance:Testpackage.LoginTestClass@36902638] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method is-config="true" signature="afterclass()[pri:0, instance:Testpackage.LoginTestClass@36902638]" started-at="2023-03-17T17:57:00 IST" name="afterclass" finished-at="2023-03-17T17:57:00 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterclass -->
      </class> <!-- Testpackage.LoginTestClass -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
